service : {
    add_account: (record {}) -> (record { id: text; balance: float; createdAt: int; updatedAt: opt int; transactions: vec text }) query;
    get_account: (record { id: text }) -> (variant { ok: record { id: text; balance: float; createdAt: int; updatedAt: opt int; transactions: vec text }; err: text }) query;
    get_all_accounts: (record {}) -> (vec record { id: text; balance: float; createdAt: int; updatedAt: opt int; transactions: vec text }) query;
    deposit: (record { id: text; amount: float }) -> (variant { ok: record { id: text; balance: float; createdAt: int; updatedAt: opt int; transactions: vec text }; err: text });
    withdraw: (record { id: text; amount: float }) -> (variant { ok: record { id: text; balance: float; createdAt: int; updatedAt: opt int; transactions: vec text }; err: text });
    get_transactions: (record { id: text }) -> (variant { ok: vec text; err: text }) query;
    http_request: (record { url: text; method: text; body: vec nat8; headers: vec record { text; text }; certificate_version: opt nat16 }) -> (record { body: vec nat8; headers: vec record { text; text }; upgrade: opt bool; streaming_strategy: opt variant { Callback: record { token: vec nat8; callback: func (vec nat8) -> (opt record { token: opt vec nat8; body: vec nat8 }) query } }; status_code: nat16 }) query;
    http_request_update: (record { url: text; method: text; body: vec nat8; headers: vec record { text; text } }) -> (record { body: vec nat8; headers: vec record { text; text }; upgrade: opt bool; streaming_strategy: opt variant { Callback: record { token: vec nat8; callback: func (vec nat8) -> (opt record { token: opt vec nat8; body: vec nat8 }) query } }; status_code: nat16 });
}
